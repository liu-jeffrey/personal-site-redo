{"version":3,"sources":["logo.svg","components/navbar/navbar.jsx","views/home/home.jsx","views/experience/experience.jsx","components/project-card/project-card.jsx","views/projects/projects.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","this","homeButton","document","querySelector","experienceButton","smoothscroll","polyfill","addButtonListeners","handleResize","window","addEventListener","setCurrentView","bind","homeViewOffset","offsetTop","experienceViewOffset","projectViewOffset","offsetHeight","scrollOffset","pageYOffset","classList","toggle","console","log","scrollIntoView","behavior","id","class","React","Component","Home","href","target","rel","src","alt","Experience","useState","title","setTitle","stack","setStack","description","setDescription","inDiv","setInDiv","handleHover","company","companyData","experienceData","getElementById","add","handleMouseExit","remove_text","removeEventListener","remove","onMouseEnter","onMouseLeave","width","height","rx","ry","ProjectCard","props","cardData","data","join","xmlns","role","viewBox","d","Projects","projectData","App","className","logo","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"grEAAAA,EAAOC,QAAU,IAA0B,kC,+6BC+D5BC,G,wLAvDPC,KAAKC,WAAaC,SAASC,cAAc,gBACzCH,KAAKI,iBAAmBF,SAASC,cAAc,sBAG/CE,IAAaC,WACbN,KAAKO,qBACLP,KAAKQ,eAELC,OAAOC,iBAAiB,SAAUV,KAAKW,eAAeC,KAAKZ,OAC3DS,OAAOC,iBAAiB,SAAUV,KAAKQ,aAAaI,KAAKZ,S,qCAIzDA,KAAKa,eAAiBX,SAASC,cAAc,cAAcW,UAC3Dd,KAAKe,qBAAuBb,SAASC,cAAc,oBAAoBW,UAEvEd,KAAKgB,kBAAoBd,SAASC,cAAc,oBAAoBW,UAAYZ,SAASC,cAAc,oBAAoBc,e,uCAI3H,IAAMC,EAAeT,OAAOU,YAC5BnB,KAAKC,WAAWmB,UAAUC,OAAO,eAAgBH,EAAelB,KAAKe,sBACrEf,KAAKI,iBAAiBgB,UAAUC,OAAO,eAAgBH,GAAgBlB,KAAKe,sBAAwBG,EAAelB,KAAKgB,mBAGxHM,QAAQC,IAAIL,GACZI,QAAQC,IAAIvB,KAAKe,wB,2CAMjBf,KAAKC,WAAWS,iBAAiB,SAAS,WACtCR,SAASC,cAAc,cAAcqB,eAAe,CAAEC,SAAU,cAEpEzB,KAAKI,iBAAiBM,iBAAiB,SAAS,WAC5CR,SAASC,cAAc,oBAAoBqB,eAAe,CAAEC,SAAU,gB,+BAS5E,OACK,yBAAKC,GAAG,UACJ,4BAAQA,GAAG,cAAcC,MAAM,gBAA/B,QACA,4BAAQD,GAAG,qBAAX,cACA,4BAAQA,GAAG,mBAAX,iB,GApDME,IAAMC,Y,MCwBZC,MA1Bf,WACI,OACI,yBAAKJ,GAAG,YAAYC,MAAM,QACtB,yBAAKD,GAAG,aACJ,wBAAIA,GAAG,aAAaC,MAAM,cAA1B,0BAC2B,6BAD3B,gCAE4B,6BAF5B,cAKA,uBAAGD,GAAG,mBAAmBC,MAAM,oBAA/B,qHAKA,yBAAKD,GAAG,cACJ,uBAAGK,KAAK,aAAaC,OAAO,SAASC,IAAI,uBAAzC,OACA,uBAAGF,KAAK,2CAA2CC,OAAO,SAASC,IAAI,uBAAvE,MACA,uBAAGF,KAAK,kCAAkCC,OAAO,SAASC,IAAI,uBAA9D,OACA,uBAAGF,KAAK,oCAAoCC,OAAO,SAASC,IAAI,uBAAhE,WAGR,yBAAKP,GAAG,UAAUQ,IAAI,kCAAkCC,IAAI,mB,sBCqEzDC,MArFf,WAAsB,MAIQC,mBAAS,IAJjB,mBAIXC,EAJW,KAIJC,EAJI,OAKQF,mBAAS,IALjB,mBAKXG,EALW,KAKJC,EALI,OAMoBJ,mBAAS,IAN7B,mBAMXK,EANW,KAMEC,EANF,OAOQN,oBAAS,GAPjB,mBAOXO,EAPW,KAOJC,EAPI,KASlB,SAASC,EAAYC,GAIjB,IAAIC,EAFJH,GAAS,GAfC,QAkBNE,EACAC,EAAcC,EAAc,IAlBtB,aAmBCF,EACPC,EAAcC,EAAc,SAnBtB,aAoBCF,IACPC,EAAcC,EAAc,UAGhCV,EAASS,EAAW,OACpBP,EAASO,EAAW,QAAc,OAASA,EAAW,UAAgB,MAAQA,EAAW,SACzFL,EAAeK,EAAW,aAE1B9C,SAASgD,eAAe,8BAA8B9B,UAAU+B,IAAI,mCAGxE,SAASC,IAELP,GAAS,GAET3C,SAASgD,eAAe,8BAA8BxC,iBAAiB,iBAAiB,SAAS2C,IAC7FnD,SAASgD,eAAe,8BAA8BI,oBAAoB,gBAAiBD,GAEtFT,IACDL,EAAS,IACTE,EAAS,IACTE,EAAe,QAIvBzC,SAASgD,eAAe,8BAA8B9B,UAAUmC,OAAO,mCAI3E,OACI,yBAAK7B,GAAG,kBAAkBC,MAAM,QAC5B,yBAAKD,GAAG,mBACJ,wBAAIA,GAAG,mBAAmBC,MAAM,cAAhC,cAGA,uBAAGD,GAAG,yBAAyBC,MAAM,oBAArC,qGAIJ,yBAAKD,GAAG,mBACJ,yBAAKA,GAAG,mBACJ,yBAAKQ,IAAI,0BAA0BC,IAAI,0BAA0BR,MAAM,mBACnE6B,aAAc,kBAAMV,EAhE1B,QAiEMW,aAAc,kBAAML,OAExB,yBAAKlB,IAAI,+BAA+BC,IAAI,+BAA+BR,MAAM,mBAC7E6B,aAAc,kBAAMV,EAnE1B,aAoEMW,aAAc,kBAAML,OAExB,yBAAKlB,IAAI,+BAA+BC,IAAI,+BAA+BR,MAAM,mBAC7E6B,aAAc,kBAAMV,EAtE1B,aAuEMW,aAAc,kBAAML,QAG5B,yBAAK1B,GAAG,kBAAkBgC,MAAM,OAAOC,OAAO,OAC1C,0BAAMD,MAAM,OAAOC,OAAO,MAAMC,GAAG,IAAIC,GAAG,OAE9C,yBAAKnC,GAAG,8BACJ,4BAAKY,GACL,4BAAKE,GACL,2BAAIE,O,qBC/DToB,MApBf,SAAqBC,GAEnB,IAAIC,EAAWD,EAAME,KAErB,OACE,yBAAKtC,MAAM,gBACT,wBAAIA,MAAM,sBAAsBqC,EAAQ,OACxC,wBAAIrC,MAAM,sBAAsBqC,EAAQ,MAAUE,KAAK,aACvD,uBAAGvC,MAAM,4BAA4BqC,EAAQ,aAC7C,wBAAIrC,MAAM,sBAAsBqC,EAAQ,OACxC,uBAAGjC,KAAMiC,EAAQ,KAAUrC,MAAM,qBAC/B,yBAAKA,MAAM,mBAAmBwC,MAAM,6BAA6BC,KAAK,MAAMC,QAAQ,aAClF,8CACA,0BAAMC,EAAE,itBCAHC,MAXf,WACE,OACE,yBAAK7C,GAAG,gBAAgBC,MAAM,QAC5B,wBAAID,GAAG,iBAAiBC,MAAM,cAA9B,YAGA,kBAAC,EAAD,CAAasC,KAAMO,EAAW,eCsBrBC,MAzBf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,4BAAQA,UAAU,cAChB,yBAAKxC,IAAKyC,IAAMD,UAAU,WAAWvC,IAAI,SACzC,mCACO,4CADP,wBAGA,uBACEuC,UAAU,WACV3C,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,kBCRY2C,QACW,cAA7BnE,OAAOoE,SAASC,UAEe,UAA7BrE,OAAOoE,SAASC,UAEhBrE,OAAOoE,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhF,SAASgD,eAAe,SDyHpB,kBAAmBiC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpE,QAAQoE,MAAMA,EAAMC,c","file":"static/js/main.26f819b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// import React, { Component } from 'react';\r\nimport React from 'react';\r\nimport smoothscroll from 'smoothscroll-polyfill';\r\nimport './navbar.scss';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.homeButton = document.querySelector(\"#navbar-home\");\r\n        this.experienceButton = document.querySelector(\"#navbar-experience\");\r\n        // this.projectsButton = document.querySelector(\"#navbar-projects\");\r\n\r\n        smoothscroll.polyfill();\r\n        this.addButtonListeners();\r\n        this.handleResize();\r\n\r\n        window.addEventListener(\"scroll\", this.setCurrentView.bind(this));\r\n        window.addEventListener(\"resize\", this.handleResize.bind(this));\r\n    }\r\n\r\n    handleResize() {\r\n        this.homeViewOffset = document.querySelector(\"#home-view\").offsetTop;\r\n        this.experienceViewOffset = document.querySelector(\"#experience-view\").offsetTop;\r\n        // this.projectViewOffset = document.querySelector(\"#project-view\").offsetTop;\r\n        this.projectViewOffset = document.querySelector(\"#experience-view\").offsetTop + document.querySelector(\"#experience-view\").offsetHeight;\r\n    }\r\n\r\n    setCurrentView() {\r\n        const scrollOffset = window.pageYOffset;\r\n        this.homeButton.classList.toggle(\"current-view\", scrollOffset < this.experienceViewOffset);\r\n        this.experienceButton.classList.toggle(\"current-view\", scrollOffset >= this.experienceViewOffset && scrollOffset < this.projectViewOffset);\r\n        // this.projectsButton.classList.toggle(\"current-view\", scrollOffset >= this.projectsButton);\r\n\r\n        console.log(scrollOffset);\r\n        console.log(this.experienceViewOffset);\r\n    }\r\n\r\n\r\n    \r\n    addButtonListeners() {\r\n        this.homeButton.addEventListener(\"click\", () => {\r\n            document.querySelector(\"#home-view\").scrollIntoView({ behavior: \"smooth\" });\r\n        });\r\n        this.experienceButton.addEventListener(\"click\", () => {\r\n            document.querySelector(\"#experience-view\").scrollIntoView({ behavior: \"smooth\" });\r\n        });\r\n        // this.projectsButton.addEventListener(\"click\", () => {\r\n        //     document.querySelector(\"ProjectsPage\").scrollIntoView({ behavior: \"smooth\" });\r\n        // });\r\n    }\r\n\r\n\r\n    render() {\r\n      return(\r\n           <div id=\"navbar\">\r\n               <button id=\"navbar-home\" class=\"current-view\">Home</button>\r\n               <button id=\"navbar-experience\">Experience</button>\r\n               <button id=\"navbar-projects\">Projects</button>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport './home.scss';\r\n\r\nfunction Home() {\r\n    return(\r\n        <div id=\"home-view\" class=\"view\">\r\n            <div id=\"home-text\">\r\n                <h1 id=\"home-intro\" class=\"view-title\">\r\n                    Hi, my name is Jeffrey.<br /> \r\n                    Iâ€™m an aspiring software<br />\r\n                    developer.\r\n                </h1>\r\n                <p id=\"home-description\" class=\"view-description\">\r\n                    Computer Science and Business Double Degree \r\n                    student at the University of Waterloo and Wilfrid \r\n                    Laurier University.\r\n                </p>\r\n                <div id=\"home-links\">\r\n                    <a href=\"google.com\" target=\"_blank\" rel=\"noopener noreferrer\">CSV</a>\r\n                    <a href=\"https://www.linkedin.com/in/liu-jeffrey/\" target=\"_blank\" rel=\"noopener noreferrer\">IN</a>\r\n                    <a href=\"https://github.com/liu-jeffrey/\" target=\"_blank\" rel=\"noopener noreferrer\">GIT</a>\r\n                    <a href=\"mailto: jeffrey.liu@uwaterloo.com\" target=\"_blank\" rel=\"noopener noreferrer\">EMAIL</a>\r\n                </div>\r\n            </div>\r\n            <img id=\"home-dp\" src=\"personal-site-redo/home-dp.jpeg\" alt=\"home-dp.jpeg\"></img> \r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Home;","import React, {useState} from 'react';\r\nimport './experience.scss';\r\nimport experienceData from './experience-data.json';\r\n\r\nconst kFGF      = \"fgf\"\r\nconst kQualcomm = \"qualcomm\"\r\nconst kAutodesk = \"autodesk\"\r\n\r\nfunction Experience() {\r\n    \r\n    // console.log(experienceData)\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [stack, setStack] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [inDiv, setInDiv] = useState(false)\r\n\r\n    function handleHover(company) {\r\n\r\n        setInDiv(true)\r\n\r\n        let companyData\r\n        if (company === kFGF) {\r\n            companyData = experienceData[kFGF]\r\n        } else if (company === kQualcomm) {\r\n            companyData = experienceData[kQualcomm]\r\n        } else if (company === kAutodesk) {\r\n            companyData = experienceData[kAutodesk]\r\n        } \r\n\r\n        setTitle(companyData[\"title\"])\r\n        setStack(companyData[\"company\"] + \" // \" + companyData[\"startDate\"] + \" - \" + companyData[\"endDate\"])\r\n        setDescription(companyData[\"description\"])\r\n\r\n        document.getElementById(\"experience-job-description\").classList.add(\"experience-job-description-fade\")\r\n    }\r\n\r\n    function handleMouseExit() {\r\n        \r\n        setInDiv(false)\r\n\r\n        document.getElementById(\"experience-job-description\").addEventListener(\"transitionend\", function remove_text(){\r\n            document.getElementById(\"experience-job-description\").removeEventListener(\"transitionend\", remove_text)\r\n\r\n            if (!inDiv) {\r\n                setTitle(\"\")\r\n                setStack(\"\")\r\n                setDescription(\"\")\r\n            }\r\n        })\r\n\r\n        document.getElementById(\"experience-job-description\").classList.remove(\"experience-job-description-fade\")\r\n\r\n    }\r\n    \r\n    return(\r\n        <div id=\"experience-view\" class=\"view\">\r\n            <div id=\"experience-text\">\r\n                <h1 id=\"experience-title\" class=\"view-title\">\r\n                    Experience\r\n                </h1>\r\n                <p id=\"experience-description\" class=\"view-description\">\r\n                    From previous internships, I'm experienced in ETLs, machine learning, and front-end development.\r\n                </p>\r\n            </div>\r\n            <div id=\"experience-jobs\">\r\n                <div id=\"experience-pics\">\r\n                    <img src=\"experience-fgf-logo.png\" alt=\"experience-fgf-logo.png\" class=\"experience-logos\" \r\n                        onMouseEnter={() => handleHover(kFGF)} \r\n                        onMouseLeave={() => handleMouseExit()}\r\n                        ></img>\r\n                    <img src=\"experience-qualcomm-logo.png\" alt=\"experience-qualcomm-logo.png\" class=\"experience-logos\"\r\n                        onMouseEnter={() => handleHover(kQualcomm)} \r\n                        onMouseLeave={() => handleMouseExit()}\r\n                        ></img>\r\n                    <img src=\"experience-autodesk-logo.jpg\" alt=\"experience-autodesk-logo.png\" class=\"experience-logos\"\r\n                        onMouseEnter={() => handleHover(kAutodesk)} \r\n                        onMouseLeave={() => handleMouseExit()}\r\n                        ></img>\r\n                </div>\r\n                <svg id=\"experience-rect\" width=\"30vw\" height=\"5px\">\r\n                    <rect width=\"30vw\" height=\"5px\" rx=\"2\" ry=\"2\"/>\r\n                </svg>\r\n                <div id=\"experience-job-description\">\r\n                    <h3>{title}</h3>\r\n                    <h4>{stack}</h4>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Experience;","import React from 'react';\nimport './project-card.scss';\n\nfunction ProjectCard(props) {\n\n  let cardData = props.data;\n  \n  return(\n    <div class=\"project-card\">\n      <h1 class=\"project-card-title\">{cardData[\"title\"]}</h1>\n      <h3 class=\"project-card-stack\">{cardData[\"stack\"].join(' â€¢ ')}</h3>\n      <p class=\"project-card-description\">{cardData[\"description\"]}</p>\n      <h3 class=\"project-card-event\">{cardData[\"event\"]}</h3>\n      <a href={cardData[\"link\"]} class=\"project-card-link\">\n        <svg class=\"project-card-git\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" viewBox=\"0 0 24 24\">\n          <title>GitHub icon</title>\n          <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/>\n        </svg>\n      </a>\n    </div>\n  )\n}\n\nexport default ProjectCard","import React from \"react\";\nimport \"./projects.scss\";\nimport projectData from \"./projects-data.json\";\nimport ProjectCard from \"../../components/project-card/project-card.jsx\";\n\nfunction Projects() {\n  return (\n    <div id=\"projects-view\" class=\"view\">\n      <h1 id=\"projects-title\" class=\"view-title\">\n        Projects\n      </h1>\n      <ProjectCard data={projectData[\"moodCensus\"]} />\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.scss';\r\nimport Navbar from './components/navbar/navbar';\r\nimport Home from './views/home/home';\r\nimport Experience from './views/experience/experience'\r\nimport Projects from './views/projects/projects'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Home />\r\n      <Experience />\r\n      <Projects />\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}